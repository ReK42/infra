---
name: caddy

services:
  caddy:
    container_name: caddy
    build:
      context: .
      network: host
      entitlements:
        - network.host
      dockerfile: ./caddy.Dockerfile
      args:
        - CADDY_VERSION=${CADDY_VERSION}
    restart: always
    healthcheck:
      test: wget -qSt 1 -O - http://127.0.0.1:2019/reverse_proxy/upstreams || exit 1
      start_period: 10s
      interval: 30s
      timeout: 10s
      retries: 3
    env_file:
      - stack.env
    environment:
      - CADDY_INGRESS_NETWORKS=caddy
    extra_hosts:
      - host.docker.internal:host-gateway
    networks:
      - proxy
    ports:
      - 80:80/tcp
      - 443:443/tcp
      - 443:443/udp
    volumes:
      - /run/podman/podman.sock:/var/run/docker.sock:ro
      - caddy_data:/data

  caddy-config:
    container_name: caddy-config
    image: docker.io/traefik/whoami:${TRAEFIK_VERSION}
    restart: always
    env_file:
      - stack.env
    networks:
      - proxy
    labels:
      ###########################
      ####  Global Settings  ####
      ###########################
      caddy_0.email: "${EMAIL}"
      caddy_0.local_certs: ""  # Use self-signed
      caddy_0.metrics.per_host:

      ###########################
      #### Reusable Snippets ####
      ###########################
      # Support backends using HTTPS with a self-signed certificate
      caddy_1: (tls_skip_verify)
      caddy_1.transport: http
      caddy_1.transport.tls: ""
      caddy_1.transport.tls_insecure_skip_verify: ""

      ###########################
      ####   Static Sites    ####
      ###########################
      # This container
      caddy_10: "whoami.${DOMAIN}"
      caddy_10.reverse_proxy: "{{ upstreams 80 }}"

      # Portainer running on the same host
      caddy_11: "portainer.${DOMAIN}"
      caddy_11.reverse_proxy: "host.docker.internal:9443"
      caddy_11.reverse_proxy.import: tls_skip_verify

  heimdall:  # TODO: Health check
    container_name: heimdall
    image: lscr.io/linuxserver/heimdall:${HEIMDALL_VERSION}
    restart: unless-stopped
    env_file:
      - stack.env
    volumes:
      - heimdall_config:/config
    labels:  # TODO: Authentication
      caddy: "infra.${DOMAIN}"
      caddy.reverse_proxy: "{{ upstreams 80 }}"
    # TODO: App list?
    #   - AdGuardHome: Enhanced
    #   - Authelia: Foundation
    #   - Authentik: Enhanced
    #   - Bitwarden: Foundation
    #   - Cloudflare: Foundation
    #   - Cockpit: Foundation
    #   - GitHub: Foundation
    #   - Heimdall: Enhanced
    #   - Keycloak: Foundation
    #   - LibreNMS: Foundation
    #   - Netbox: Foundation
    #   - Netdata: Enhanced
    #   - Passbolt: Foundation
    #   - Portainer: Enhanced
    #   - PowerDNS: Foundation
    #   - Prometheus: Foundation
    #   - Proxmox: Enhanced
    #   - SpeedtestTracker: Enhanced
    #   - Tailscale: Foundation
    #   - Traefik: Enhanced
    #   - UniFi: Enhanced
    #   - Vaultwarden: Foundation

networks:
  proxy:
    external: true

volumes:
  caddy_data:
  heimdall_config:
